SQL> DECLARE
  2    CURSOR cust_cursor IS SELECT CustomerID, DOB FROM Customers;
  3    v_customer_id NUMBER;
  4    v_dob DATE;
  5    v_age NUMBER;
  6  BEGIN
  7    OPEN cust_cursor;
  8    LOOP
  9      FETCH cust_cursor INTO v_customer_id, v_dob;
 10      EXIT WHEN cust_cursor%NOTFOUND;
 11      -- Calculate age
 12      v_age := TRUNC((SYSDATE - v_dob) / 365.25);
 13      IF v_age > 60 THEN
 14        -- Update interest rate for loans of this customer (assuming a Loans table with CustomerID and InterestRate columns)
 15        UPDATE Loans
 16        SET InterestRate = InterestRate * 0.99
 17        WHERE CustomerID = v_customer_id;
 18      END IF;
 19    END LOOP;
 20    CLOSE cust_cursor;
 21  END;
 22  /

PL/SQL procedure successfully completed.

SQL> DECLARE
  2    CURSOR cust_cursor IS SELECT CustomerID, Balance, IsVIP FROM Customers;
  3    v_customer_id NUMBER;
  4    v_balance NUMBER;
  5    v_is_vip VARCHAR2(3);
  6  BEGIN
  7    OPEN cust_cursor;
  8    LOOP
  9      FETCH cust_cursor INTO v_customer_id, v_balance, v_is_vip;
 10      EXIT WHEN cust_cursor%NOTFOUND;
 11      IF v_balance > 10000 THEN
 12        UPDATE Customers
 13        SET IsVIP = 'YES'
 14        WHERE CustomerID = v_customer_id;
 15      END IF;
 16    END LOOP;
 17    CLOSE cust_cursor;
 18  END;
 19  /

PL/SQL procedure successfully completed.

SQL> DECLARE
  2    CURSOR loan_cursor IS SELECT L.CustomerID, C.Name, L.LoanID, L.EndDate FROM Loans L JOIN Customers C ON L.CustomerID = C.CustomerID WHERE L.EndDate BETWEEN SYSDATE AND SYSDATE + 30;
  3    v_customer_id NUMBER;
  4    v_customer_name VARCHAR2(100);
  5    v_loan_id NUMBER;
  6    v_end_date DATE;
  7  BEGIN
  8    OPEN loan_cursor;
  9    LOOP
 10      FETCH loan_cursor INTO v_customer_id, v_customer_name, v_loan_id, v_end_date;
 11      EXIT WHEN loan_cursor%NOTFOUND;
 12      -- Send reminder (replace with actual email/notification logic)
 13      DBMS_OUTPUT.PUT_LINE('Reminder for customer: ' || v_customer_name || ', Loan ID: ' || v_loan_id || ', Due on: ' || v_end_date);
 14    END LOOP;
 15    CLOSE loan_cursor;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> spool off;
